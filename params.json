{"name":"Named let","tagline":"named_let can be used to make the rspec's output easier to read.It's wrapper function of `let`.","body":"named_let\r\n==================================\r\n\r\nThe `named_let` can be used to make the rspec's output easier to read.\r\nIt's wrapper function of `let`.\r\n\r\n`named_let(:name){ obj }` changes the value which returns 'obj#to_s' and\r\n'obj#inspect' to :name, then output message of 'rspec -format d' be improved more readable.\r\n\r\n# Usage\r\n\r\nadd `require 'named_let'` to your spec_helper.rb or * _spec.rb.\r\n\r\n\r\n    describe 'named_let' do\r\n      context 'symbol only' do\r\n        named_let(:foo) { Object.new }\r\n        it { foo.to_s should == \"foo\" }\r\n        it { foo.inspect.should == \"foo\" }\r\n      end\r\n\r\n      context 'with label strings' do\r\n        named_let(:foo,\"label for display\"){ Object.new }\r\n        it { foo.to_s should == \"label for display\" }\r\n        it { foo.inspect.should == \"label for display\" }\r\n       end\r\n    end\r\n\r\nYou can use `name_let!` to force the method's invocation before each example, like original `let!`.\r\n\r\n# Why named_let?\r\n\r\nRSpec uses 'Object#inspect' for generating output message from value of specified by `let`.\r\nThis will generates unexpected output like 'should == #<Object:0x2aaaaf8a0870A>', it's not human readable.\r\n\r\nNow let's use `named_let` instead of `let`.The generaed output will be more readable like 'should == \"label for display'.\r\n\r\n# Example\r\n\r\nFor Example, now writing specs for CanCan like bellow,\r\n\r\n    require 'spec_helper'\r\n    require \"cancan/matchers\"\r\n\r\n    describe Ability do\r\n      context 'an user' do\r\n        let(:user)          { Factory.create(:user) }\r\n\r\n        let(:article)     { Factory.create(:article) }\r\n        let(:own_article) { Factory.create(:article, :user => user) }\r\n\r\n        subject { Ability.new(user) }\r\n\r\n        it { should be_able_to(:read, article) }\r\n        it { should be_able_to(:update, own_article) }\r\n      end\r\n    end\r\n\r\n\r\nThis specs generates outputs is ...\r\n\r\n\r\n    $ bundle exec rspec -c --format d spec/models/ability_spec.rb\r\n\r\n    Ability\r\n      an user\r\n        should be able to :read #<Article id: 44, title: \"The Test Article 1\", body: \"This is test article!!\", created_at: \"2012-02-23 14:19:26\", updated_at: \"2012-02-23 14:19:26\", user_id: nil>\r\n        should be able to :update #<Article id: 45, title: \"The Test Article 2\", body: \"This is test article!!\", created_at: \"2012-02-23 14:19:26\", updated_at: \"2012-02-23 14:19:26\", user_id: 31>\r\n\r\n    Finished in 0.26158 seconds\r\n    2 examples, 0 failures\r\n\r\n\r\nOMG, It's not human readable. so,let's change `let` to `named_let`.\r\n\r\n        named_let(:article)     { Factory.create(:article) }\r\n        named_let(:own_article) { Factory.create(:article, :user => user) }\r\n\r\n\r\nagain, execute `rspec --format d ...`\r\n\r\n\r\n    $ bundle exec rspec -c --format d spec/models/ability_spec.rb\r\n\r\n    Ability\r\n      an user\r\n        should be able to :read article\r\n        should be able to :update own article\r\n\r\n    Finished in 0.25375 seconds\r\n    2 examples, 0 failures\r\n\r\n\r\nokay, it's readable!!!\r\n\r\n# For debugging\r\n\r\nIf the specs is fail, You will want to know original outputs of 'Object#inspect'.\r\nBut named_let hides actual outputs of \"Object#inspect\".\r\n\r\n    Failures:\r\n\r\n      1) Ability an user\r\n         Failure/Error: it { should_not be_able_to(:update, own_article) }\r\n           expected not to be able to :update own article\r\n\r\n\r\nFor debugging spec, if given `-d` option to rspec command or `$DEBUG` flag is true,\r\nnamed_let append orignal result of `Object#inspect` to returns value.\r\n\r\n\r\ngiven `-d` option, then...\r\n\r\n    Failures:\r\n\r\n      1) Ability an user\r\n         Failure/Error: it { should_not be_able_to(:update, own_article) }\r\n           expected not to be able to :update own article (#<Article id: 113, title: \"The Test Article 3\", body: \"This is test article!!\", created_at: \"2012-02-24 05:53:17\", updated_at: \"2012-02-24 05:53:17\", user_id: 90>)\r\n\r\n\r\nNOTE:\r\n\r\n  Requires `ruby-debug` to using `-d` option.\r\n  run `gem install ruby-debug`.\r\n  If your Ruby-Runtime is 1.9+, see \"https://github.com/mark-moseley/ruby-debug\".\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}